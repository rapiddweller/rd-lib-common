on:
  push:
    branches:
    - '**'

env:
  MAVEN_CLI_OPTS: "--batch-mode --update-snapshots"
  JAVA_JDKVERSION_TAG: "jdk-11"
  SET_VERSION: |
    ARTIFACT_ID=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.artifactId}' --non-recursive exec:exec);
    echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV;
    if [ GITHUB_REF == refs/tags/* ];
    then
      ARTIFACT_VERSION=${GITHUB_REF/refs\/tags\//}-$JAVA_JDKVERSION_TAG;
      echo ARTIFACT_VERSION=$ARTIFACT_VERSION  >> $GITHUB_ENV;
      echo ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION >> $GITHUB_ENV;
    else
      ARTIFACT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec);
      echo ARTIFACT_VERSION=$ARTIFACT_VERSION  >> $GITHUB_ENV;
      echo ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION >> $GITHUB_ENV;
    fi
jobs:

  ###################### Test / Build ######################

  build_jdk11:
    runs-on: ubuntu-latest
    container: maven:3.6-adoptopenjdk-11
    steps:
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: eval $SET_VERSION
        shell: bash
      - run: mvn versions:set -DnewVersion=$ARTIFACT_VERSION
      - run: mvn $MAVEN_CLI_OPTS clean package -Dmaven.test.skip=true
      - name: Upload build artifact for assembly
        uses: actions/upload-artifact@v2
        with:
          name: build_jdk11
          path: target/*.jar
          if-no-files-found: error
          retention-days: 5

  test_jdk11:
    runs-on: ubuntu-latest
    container: maven:3.6-adoptopenjdk-11
    steps:
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: eval $SET_VERSION
        shell: bash
      - run: mvn versions:set -DnewVersion=$ARTIFACT_VERSION
      - run: mvn $MAVEN_CLI_OPTS clean org.jacoco:jacoco-maven-plugin:prepare-agent test jacoco:report
      - run: awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco.csv
      - run: bash <(curl -s https://codecov.io/bash)
        shell: bash

  ###################### Assembly and Deploy ######################

  assembly_jdk11:
    runs-on: ubuntu-latest
    needs: [ test_jdk11,build_jdk11 ]
    if: github.ref == 'refs/tags/*'
    container: maven:3.6-adoptopenjdk-11
    steps:
      - uses: actions/checkout@v2
      - run: eval $SET_VERSION
        shell: bash
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Download build_jdk11 for assembly
        uses: actions/download-artifact@v2
        with:
          name: build_jdk11
          path: target
      - name: check content of target
        run: cd target && ls
      - run: mvn $MAVEN_CLI_OPTS site:site assembly:single -Dmaven.test.skip=true
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: assembly_jdk11
          path: |
            target/*.tar.gz
            target/*.zip
            target/site/
          if-no-files-found: error
          retention-days: 5

  publish_jdk11:
    runs-on: ubuntu-latest
    needs: [ test_jdk11,build_jdk11 ]
    container: maven:3.6-adoptopenjdk-11
    steps:
      - uses: actions/checkout@v2
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: eval $SET_VERSION
        shell: bash
      - name: Publish package
        run: mvn --batch-mode deploy --settings .m2/settings.xml -Dmaven.test.skip=true -Dmaven.install.skip=true
        env:
          NEXUS_USER: ${{ secrets.NEXUS_USER }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

  ###################### Release ######################

  releasepreparation:
    runs-on: ubuntu-latest
    container: maven:3.6-adoptopenjdk-11
    needs: [ assembly_jdk11 ]
    if: github.ref == 'refs/tags/*'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: eval $SET_VERSION
        shell: bash
      - name: Download assembly_jdk11 for release
        uses: actions/download-artifact@v2
        with:
          name: build_jdk11
          path: target
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: true
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ env.ARTIFACT_FULLNAME }}-dist.zip
          asset_name: ${{ env.ARTIFACT_FULLNAME }}-dist.zip
          asset_content_type: application/zip